{"version":3,"sources":["constants/style.js","components/TodoHeader.js","components/TodoCard.js","components/TodoFilter.js","App.js","reportWebVitals.js","index.js"],"names":["TodoBtn","styled","div","h1","input","button","props","bgColor","fontColor","TodoTitle","AddTodoArea","TodoInputArea","TodoHeader","inputContent","todos","onUpdate","onInputContentChange","onTodosChange","onHandleUpdate","AddTodoBtn","onClick","handleAddTodo","update","id","alert","type","value","onChange","e","target","TodoCardWrapper","TodoItem","isDone","TodoAction","TodoStatus","TodoCard","todo","onChangeStatus","onDeleteTodo","onUpdateTodo","content","TodoFilterWrapper","TodoFilterBlock","active","ClearTodo","TodoFilter","onFilterChange","onClearTodo","filter","useContext","FilterContext","TodoWrapper","createContext","App","useRef","useState","setInputContent","todoData","window","localStorage","getItem","JSON","parse","current","setTodos","setFilter","setOnUpdate","handleTodoStatus","map","handleDeleteTodo","handleUpdateTodo","useEffect","setItem","stringify","writeTodosToLocalStorage","show","Provider","currentFilter","todoCardJsx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9555aa7.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\n\r\nexport const TodoWrapper = styled.div`\r\n  margin: 0 auto;\r\n  border-radius: 8px;\r\n  border: 1px #ccc solid;\r\n  width: 500px;\r\n`\r\nexport const TodoTitle = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nexport const AddTodoArea = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nexport const TodoInputArea = styled.input`\r\n  margin: 0 1rem;\r\n  border-radius: 4px;\r\n  border-color: #ccc;\r\n  line-height: 1.5rem;\r\n  box-sizing: border-box;\r\n  width: 40%;\r\n`\r\nexport const TodoBtn = styled.button`\r\n  font-size: 1rem;\r\n  background: ${(props) => props.bgColor || \"royalblue\"};\r\n  color: ${(props) => props.fontColor || \"white\"};\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\nimport { TodoBtn } from \"../constants/style\"\r\n\r\nconst TodoTitle = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst AddTodoArea = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nconst TodoInputArea = styled.input`\r\n  margin-right: 1rem;\r\n  border-radius: 4px;\r\n  border-color: #ccc;\r\n  line-height: 1.5rem;\r\n  box-sizing: border-box;\r\n  width: 40%;\r\n`\r\n\r\nexport default function TodoHeader({\r\n  inputContent,\r\n  todos,\r\n  onUpdate,\r\n  onInputContentChange,\r\n  onTodosChange,\r\n  onHandleUpdate,\r\n}) {\r\n  // useEffect(() => {\r\n  //   onInputContentChange(inputContent)\r\n  // }, [inputContent])\r\n\r\n  // useEffect(() => {\r\n  //   onTodosChange(todos)\r\n  // }, [todos])\r\n\r\n  function AddTodoBtn() {\r\n    return (\r\n      <TodoBtn onClick={handleAddTodo}>\r\n        {onUpdate.update ? \"更新\" : \"新增\"}\r\n      </TodoBtn>\r\n    )\r\n  }\r\n\r\n  const handleAddTodo = () => {\r\n    if (inputContent === \"\") {\r\n      alert(\"請輸入 todo\")\r\n      return\r\n    }\r\n    if (onUpdate.update) {\r\n      onHandleUpdate(onUpdate.id)\r\n      onInputContentChange(\"\")\r\n      return\r\n    }\r\n    onInputContentChange(inputContent)\r\n    onTodosChange(todos)\r\n    onInputContentChange(\"\")\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <TodoTitle>Todos</TodoTitle>\r\n      <AddTodoArea>\r\n        <TodoInputArea\r\n          type=\"text\"\r\n          value={inputContent}\r\n          onChange={(e) => {\r\n            onInputContentChange(e.target.value)\r\n          }}\r\n        />\r\n        <AddTodoBtn onClick={handleAddTodo} />\r\n      </AddTodoArea>\r\n    </div>\r\n  )\r\n}\r\n","import styled from \"styled-components\"\r\nimport { TodoBtn } from \"../constants/style\"\r\n\r\nconst TodoCardWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0.4rem 2rem;\r\n  height: 2rem;\r\n  border-top: 1px solid #ccc;\r\n`\r\nconst TodoItem = styled.div`\r\n  ${(props) =>\r\n    props.isDone &&\r\n    `\r\n  color: #ccc;\r\n  text-decoration: line-through;\r\n  `}\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  flex-grow: 1;\r\n`\r\nconst TodoAction = styled.div`\r\n  * {\r\n    margin-left: 0.4rem;\r\n  }\r\n`\r\nconst TodoStatus = styled.div`\r\n  display: inline;\r\n  color: gray;\r\n`\r\n\r\nexport default function TodoCard({\r\n  todo,\r\n  onChangeStatus,\r\n  onDeleteTodo,\r\n  onUpdateTodo,\r\n}) {\r\n  return (\r\n    <TodoCardWrapper>\r\n      <TodoItem\r\n        isDone={todo.isDone}\r\n        onClick={() => {\r\n          onChangeStatus(todo.id)\r\n        }}\r\n      >\r\n        {todo.content}\r\n      </TodoItem>\r\n      <TodoAction>\r\n        <TodoStatus>{todo.isDone ? \"已完成\" : \"未完成\"}</TodoStatus>\r\n        <TodoBtn\r\n          bgColor=\"darkslategray\"\r\n          onClick={() => {\r\n            onUpdateTodo(todo.id)\r\n          }}\r\n        >\r\n          編輯\r\n        </TodoBtn>\r\n        <TodoBtn\r\n          bgColor=\"red\"\r\n          onClick={() => {\r\n            onDeleteTodo(todo.id)\r\n          }}\r\n        >\r\n          刪除\r\n        </TodoBtn>\r\n      </TodoAction>\r\n    </TodoCardWrapper>\r\n  )\r\n}\r\n","import styled from \"styled-components\"\r\nimport { useContext } from \"react\"\r\nimport { FilterContext } from \"../App\"\r\n\r\nconst TodoFilterWrapper = styled.div`\r\n  margin: 1rem auto;\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  & > div:first-child {\r\n    margin-right: 2rem;\r\n  }\r\n`\r\n\r\nconst TodoFilterBlock = styled.div`\r\n  box-sizing: border-box;\r\n  display: inline;\r\n  padding: 0 0.8rem;\r\n  border: 1px solid royalblue;\r\n  height: 1.7rem;\r\n  ${(props) =>\r\n    props.active &&\r\n    `\r\n    color: white;\r\n    background: royalblue;\r\n  `}\r\n  transition: all 0.2s;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ClearTodo = styled.div`\r\n  font-weight: bold;\r\n  color: darksalmon;\r\n  transition: color 0.2s;\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: darkred;\r\n  }\r\n`\r\n\r\nexport default function TodoFilter({ onFilterChange, onClearTodo }) {\r\n  const filter = useContext(FilterContext)\r\n  return (\r\n    <TodoFilterWrapper>\r\n      <div>\r\n        <TodoFilterBlock\r\n          active={filter === \"all\" ? true : false}\r\n          onClick={() => {\r\n            onFilterChange(\"all\")\r\n          }}\r\n        >\r\n          全部\r\n        </TodoFilterBlock>\r\n        <TodoFilterBlock\r\n          active={filter === \"completed\" ? true : false}\r\n          onClick={() => {\r\n            onFilterChange(\"completed\")\r\n          }}\r\n        >\r\n          已完成\r\n        </TodoFilterBlock>\r\n        <TodoFilterBlock\r\n          active={filter === \"uncompleted\" ? true : false}\r\n          onClick={() => {\r\n            onFilterChange(\"uncompleted\")\r\n          }}\r\n        >\r\n          未完成\r\n        </TodoFilterBlock>\r\n      </div>\r\n      <div>\r\n        <ClearTodo\r\n          onClick={() => {\r\n            onClearTodo()\r\n          }}\r\n        >\r\n          清空\r\n        </ClearTodo>\r\n      </div>\r\n    </TodoFilterWrapper>\r\n  )\r\n}\r\n","import { useState, useRef, useEffect, createContext } from \"react\"\n\nimport TodoHeader from \"./components/TodoHeader\"\nimport TodoCard from \"./components/TodoCard\"\nimport TodoFilter from \"./components/TodoFilter\"\nimport styled from \"styled-components\"\n\nexport const TodoWrapper = styled.div`\n  margin: 0 auto;\n  border-radius: 8px;\n  border: 1px #ccc solid;\n  width: 500px;\n`\nexport const FilterContext = createContext()\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos))\n}\n\nfunction App() {\n  const id = useRef(1)\n  const [inputContent, setInputContent] = useState(\"\")\n  const [todos, setTodos] = useState(() => {\n    let todoData = window.localStorage.getItem(\"todos\") || \"\"\n    if (todoData && todoData !== \"[]\") {\n      todoData = JSON.parse(todoData)\n      id.current = todoData[0].id + 1\n    } else {\n      todoData = []\n    }\n    return todoData\n  })\n  const [filter, setFilter] = useState(\"all\")\n  const [onUpdate, setOnUpdate] = useState({ update: false, id: null })\n\n  const handleSetInputContent = (content) => {\n    setInputContent(content)\n  }\n  const handleSetTodos = (todos) => {\n    setTodos([\n      {\n        id: id.current,\n        content: inputContent,\n        isDone: false,\n        show: true,\n      },\n      ...todos,\n    ])\n    id.current++\n  }\n  const handleTodoStatus = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        }\n      })\n    )\n  }\n\n  const handleTodoFilter = (currentFilter) => {\n    setFilter(currentFilter)\n  }\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id))\n  }\n\n  const handleUpdateTodo = (id) => {\n    setInputContent(todos.filter((todo) => todo.id === id)[0].content)\n    setOnUpdate({ update: true, id })\n  }\n\n  const handleUpdate = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo\n        return {\n          ...todo,\n          content: inputContent,\n        }\n      })\n    )\n    setOnUpdate({ update: false, id: null })\n  }\n\n  const todoFilter = (todo) => {\n    const todoCardJsx = (\n      <TodoCard\n        key={todo.id}\n        todo={todo}\n        onChangeStatus={handleTodoStatus}\n        onDeleteTodo={handleDeleteTodo}\n        onUpdateTodo={handleUpdateTodo}\n      />\n    )\n    switch (filter) {\n      case \"completed\":\n        return todo.isDone && todoCardJsx\n      case \"uncompleted\":\n        return !todo.isDone && todoCardJsx\n      default:\n        return todoCardJsx\n    }\n  }\n\n  const handleClearTodo = () => {\n    setTodos([])\n  }\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos)\n  }, [todos])\n\n  return (\n    <TodoWrapper>\n      <TodoHeader\n        inputContent={inputContent}\n        todos={todos}\n        onInputContentChange={handleSetInputContent}\n        onTodosChange={handleSetTodos}\n        onUpdate={onUpdate}\n        onHandleUpdate={handleUpdate}\n      />\n      <FilterContext.Provider value={filter}>\n        <TodoFilter\n          onFilterChange={handleTodoFilter}\n          onClearTodo={handleClearTodo}\n        />\n      </FilterContext.Provider>\n      {todos.map(todoFilter)}\n    </TodoWrapper>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nreportWebVitals()\n"],"sourceRoot":""}